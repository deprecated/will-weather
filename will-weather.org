#+PROPERTY: header-args    :exports both
* Getting my weather data from Netatmos station

** Installing Python netatmo api library
+ There are two
+ This one seems the best
  + https://github.com/rene-d/netatmo
  + [[file:~/Source/netatmo/]]
** Setting credentials
+ These are in my [[file:~/.netatmorc]]
+ Passwords and keys are also stored in 1Password vault
** Available stations
#+BEGIN_SRC sh :results verbatim :exports both
~/Source/netatmo/netatmo.py list
#+END_SRC

#+RESULTS:
: 1 station 70:ee:50:22:ce:e6 Privada Hijos del Ejército Morelia MX
:    module 70:ee:50:22:ce:e6 indoor Temperature,CO2,Humidity,Noise,Pressure
:    module 02:00:00:22:b8:7e outdoor Temperature,Humidity
** Download data into CSV files
Run this periodically - it should just grab the new data

#+BEGIN_SRC sh :results verbatim :exports both
~/Source/netatmo/netatmo.py fetch
#+END_SRC

#+RESULTS:
: station_name : Privada Hijos del Ejército
: device_id    : 70:ee:50:22:ce:e6
: module_name  : indoor
: data_type    : ['Temperature', 'CO2', 'Humidity', 'Noise', 'Pressure']
: module_id    : 02:00:00:22:b8:7e
: module_name  : outdoor
: data_type    : ['Temperature', 'Humidity']
: getmeasure 1 date_begin=1522009858 Sun Mar 25 14:30:58 2018
: getmeasure 1 date_begin=1522009844 Sun Mar 25 14:30:44 2018
** DONE Make graphs
CLOSED: [2018-03-11 Sun 00:02]
*** Inside and outside temperature and humidity
#+BEGIN_SRC python :return plotfile :results file :exports both
  import pandas as pd
  from matplotlib import pyplot as plt
  import seaborn as sns

  df_inside = pd.read_csv("netatmo_station.csv", sep=';')
  df_outside = pd.read_csv("netatmo_module.csv", sep=';')

  df_inside.index = pd.to_datetime(df_inside["DateTime"])
  df_outside.index = pd.to_datetime(df_outside["DateTime"])

  plotfile = "weather-test.png"

  fig, (ax2, ax) = plt.subplots(2, 1, sharex=True, figsize=(15, 7))

  ax2.plot(df_inside.index.to_pydatetime(), df_inside.Humidity, label="inside")
  ax2.plot(df_outside.index.to_pydatetime(), df_outside.Humidity, label="outside")
  ax2.legend()
  ax2.set(
      ylabel="Humidity, Percent"
  )

  ax.plot(df_inside.index.to_pydatetime(), df_inside.Temperature, label="inside")
  ax.plot(df_outside.index.to_pydatetime(), df_outside.Temperature, label="outside")
  ax.legend()
  ax.set(
      xlabel="Date",
      ylabel="Temperature, Celsius"
  )

  fig.savefig(plotfile)
  fig.savefig(plotfile.replace(".png", ".pdf"))


#+END_SRC

#+RESULTS:
[[file:weather-test.png]]
*** Pressure, CO_2, and noise 


#+BEGIN_SRC python :return plotfile :results file :exports both
  import pandas as pd
  from matplotlib import pyplot as plt
  import seaborn as sns

  df_inside = pd.read_csv("netatmo_station.csv", sep=';')
  df_outside = pd.read_csv("netatmo_module.csv", sep=';')

  df_inside.index = pd.to_datetime(df_inside["DateTime"])
  df_outside.index = pd.to_datetime(df_outside["DateTime"])

  plotfile = "noise-test.png"

  fig, (ax3, ax2, ax) = plt.subplots(3, 1, sharex=True, figsize=(15, 10))

  ax3.fill_between(df_inside.index.to_pydatetime(), df_inside.Pressure, y2=800.0, label="Pressure")
  ax3.legend()
  ax3.set(
      ylabel="Pressure, mB"
  )

  ax2.fill_between(df_inside.index.to_pydatetime(), df_inside.CO2, y2=400.0, label="CO2")
  ax2.legend()
  ax2.set(
      ylabel="CO$_{2}$, ppm",
      ylim=[380.0, None],
  )

  ax.fill_between(df_inside.index.to_pydatetime(), df_inside.Noise, y2=33.0, label="Noise")
  ax.legend()
  ax.set(
      xlabel="Date",
      ylabel="Noise, dB"
  )

  fig.savefig(plotfile)
  fig.savefig(plotfile.replace(".png", ".pdf"))


#+END_SRC

#+RESULTS:
[[file:noise-test.png]]
*** Two-factor pair graphs

First, the inside station.  This takes about a minute to run.
#+BEGIN_SRC python :return figfile :results file :exports both
  import numpy as np
  import pandas as pd
  from matplotlib import pyplot as plt
  import seaborn as sns

  sns.set_color_codes('dark')

  df_inside = pd.read_csv("netatmo_station.csv", sep=';')
  df_outside = pd.read_csv("netatmo_module.csv", sep=';')

  df_inside.index = pd.to_datetime(df_inside["DateTime"])
  df_outside.index = pd.to_datetime(df_outside["DateTime"])

  figfile = "weather-inside-pairplot.png"

  df_inside['CO2'] = df_inside['CO2'].where(df_inside['CO2'] > 400.0)
  df_inside['Noise'] = df_inside['Noise'].where( df_inside['Noise'] > 35.0)
  df_inside = df_inside.where(df_inside > 0.0)

  df = df_inside.fillna(method='bfill')
  variables = ['Temperature', 'CO2', 'Humidity', 'Noise', 'Pressure']
  g = sns.PairGrid(df, vars=variables, size=1.5)
  g = g.map_upper(plt.scatter, marker='.', alpha=0.05, facecolor='r', edgecolor='none')
  g = g.map_lower(sns.kdeplot, cmap="Purples_d", n_levels=10)
  g = g.map_diag(plt.hist)

  g.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:weather-inside-pairplot.png]]
